= render partial: 'layouts/website', locals: { website: website }
.branch-header
  - unless branch.production?
    - production_branch = repository.branch('master')
    - if branch.rebase_required?(production_branch)
      .pull-right-large
        span.small.text-danger> This branch out of date with Production
        = link_to icor('Pull Changes', 'arrow-circle-down'), [:new, website, branch, :rebase], class: 'btn btn-success m-l-sm'
      hr.m-y-sm
    - elsif branch.merge_possible?(production_branch) && current_authorization.production_branch_access?
      .pull-right-large
        span.small.text-muted> This branch is ahead of Production
        = link_to icor('Publish Changes', 'arrow-circle-right'), [:new, website, branch, :merge], class: 'btn btn-info m-l-sm'
      hr.m-y-sm
  span.btn-group.m-r
    span.btn.btn-default.dropdown-toggle type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
      => branch.title(current_user)
      span.caret
    ul.dropdown-menu
      - if current_authorization.production_branch_access?
        li class=('active' if branch.production?) = link_to 'Production Branch', (controller_name == 'branches' ? :id : :branch_id) => repository.branch('master')
        li.divider role="separator"
      li.dropdown-header Staging Branches
      li class=('active' if branch.staging?(current_user)) = link_to 'Your Staging Branch', (controller_name == 'branches' ? :id : :branch_id) => repository.branch(current_user)
      - if current_authorization.staging_branch_access?
        - website.users.where.not(users: { id: current_user.id }).each do |user|
          - user_branch = repository.branch(user)
          li class=('active' if branch.name == user_branch.name) = link_to (controller_name == 'branches' ? :id : :branch_id) => user_branch do
            => user.name
            small.text-muted = user.email
      - if current_authorization.custom_branch_access?
        - if repository.custom_branch_names.any?
          li.divider role="separator"
          li.dropdown-header Custom Branches
          - repository.custom_branch_names.each do |name|
            li class=('active' if branch.name == name) = link_to name, (controller_name == 'branches' ? :id : :branch_id) => repository.branch(name)
        li.divider role="separator"
        li = link_to [:new, website, branch, :checkout] do
          => icon 'code-fork'
          small Add Custom Branch
  hr.m-y-sm
  span.small.text-muted
    => link_to 'Preview Branch', "//#{website.id}-#{Digest::SHA1.hexdigest(@branch.name)}.#{ENV['HOST']}/", target: :_blank
    => icon 'external-link'
    - if current_authorization.designer?
      ' â€¢
      - if website.form_responders.active.any?
        = pluralize website.form_responders.count, 'Active Form Responder'
      - else
        | No Active Form Responders
ul.nav.nav-tabs.branch-nav
  li class=('active' if current_page?([website, branch])) = link_to 'Overview', [website, branch]
  - if current_authorization.designer?
    li class=('active' if current_page?([website, branch, :design])) = link_to 'Design', [website, branch, :design]
  - if current_authorization.editor? || current_authorization.designer?
    li class=('active' if current_page?([website, branch, :pages])) = link_to 'Pages', [website, branch, :pages]
  li class=('active' if current_page?([website, branch, :drafts])) = link_to 'Drafts', [website, branch, :drafts]
  li class=('active' if current_page?([website, branch, :posts])) = link_to 'Posts', [website, branch, :posts]
  - if current_authorization.editor? || current_authorization.designer?
    li class=('active' if current_page?([website, branch, :collections])) = link_to 'Collections', [website, branch, :collections]
    li class=('active' if current_page?([website, branch, :datasets])) = link_to 'Data', [website, branch, :datasets]
    li class=('active' if current_page?([website, branch, :static_files])) = link_to 'Files', [website, branch, :static_files]
  li class=('active' if current_page?([website, branch, :commits])) = link_to 'History', [website, branch, :commits]
= yield
